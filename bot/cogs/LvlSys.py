import asyncio
import discord
import math
from discord import embeds
from discord import channel
from discord.ext import commands,tasks
from discord.ext.commands.core import command
from discord.message import Message
import psycopg2
from datetime import datetime
import threading
import random
import json
import string
from discord.utils import get
from dislash import *
from config import settings

class StastUsers(commands.Cog):

    def __init__(self, bot):
        self.bot = bot

    global connection
    global cursor
    connection = psycopg2.connect(
        dbname='d7npuuht675g6t',
        user='dfelpwutbrsdwj',
        password='84d0cfdcf95f22787066edbc6cac37e900a64943ad8629d9ad30e325c6e797cc',
        host='ec2-44-198-223-154.compute-1.amazonaws.com')
    cursor = connection.cursor()

    @commands.Cog.listener()
    async def on_ready(self):
        cursor.execute("""CREATE TABLE IF NOT EXISTS users(
            name TEXT,
            id BIGINT,
            premium BOOLEAN,
            cash BIGINT,
            spent BIGINT,
            server_id BIGINT
        )""")

        cursor.execute("""CREATE TABLE IF NOT EXISTS shop(
            role_id BIGINT,
            id BIGINT,
            cost BIGINT,
            item_type TEXT           
        )""")

        cursor.execute("""CREATE TABLE IF NOT EXISTS CashCasino(
            cash BIGINT,
            server_id BIGINT
        )""")
        
        for guild in self.bot.guilds:
            for member in guild.members:
                cursor.execute(f"SELECT id FROM users WHERE id = {member.id}")
                results = cursor.fetchone()
                if not member.bot:
                    if results is None:
                        cursor.execute(f"INSERT INTO users VALUES ('{member}','{member.id}',false,0,0,'{guild.id}')")
                    else: pass
            cursor.execute(f"SELECT cash FROM CashCasino WHERE server_id = {guild.id}")
            serverCash = cursor.fetchone()
            if serverCash is None:
                cursor.execute(f"INSERT INTO CashCasino VALUES (0,'{guild.id}')")
            else:pass
        connection.commit()
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")

    @commands.Cog.listener()
    async def on_member_join(self, member):
        cursor.execute(f"SELECT id FROM users WHERE id = {member.id}")
        results = cursor.fetchone()
        if not member.bot:
            if results is None:
                cursor.execute(f"INSERT INTO users VALUES ('{member}','{member.id}',0,'{member.guild.id}')")
                connection.commit()
            else:pass

    @commands.Cog.listener()
    async def on_message(self,message):
        OffMat = ["–ò–ª–∏ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, –∏–ª–∏ —Ç—ã –º–∞—Ç–µ–∫–Ω—É–ª—Å—è {}?\n–ù–∞–¥–µ—é—Å—å –ø–æ–∫–∞–∑–∞–ª–æ—Å—å, –∞ —Ç–æ –∑–∞–±–∞–Ω—é!","–Ø –∫–æ–Ω–µ—á–Ω–æ –Ω–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∫–∞, –Ω–æ –º–Ω–µ –ø–æ–∫–∞–∑–∞–ª–æ—Å—å —á—Ç–æ —Ç—ã –º–∞—Ç–µ—Ä–∏—à—Å—è {}","–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–∞–∫–∏—Ö —Å–ª–æ–≤, —Ö–æ—Ä–æ—à–æ {}?"]

        if '–≥–∞–±–µ –∂–∏–≤' in message.content.lower():
            await message.channel.send("–ì–∞–±–µ –†–∏–ø!!!")

        if '–º–∏–∫—É —Ä–∏–ø' in message.content.lower():
            await message.channel.send("–°–∞–º –†–∏–ø, —Ç–∞–∫ –∂–µ –∫–∞–∫ –∏ –ì–∞–±–µ!!!")

        if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.content.split(' ')}.intersection(set(json.load(open('bot/textFile/cenz.json')))) != set():
            Mes = await message.channel.send(random.choice(OffMat).format(message.author.mention))
            await asyncio.sleep(30)
            await Mes.delete()

        if '@everyone' in message.content.lower():
            await message.add_reaction('üëç')
            await message.add_reaction('üëé')

        if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.content.split(' ')}\
        .intersection(set(json.load(open('bot/textFile/vk.json')))) != set():
            await asyncio.sleep(5)
            await message.add_reaction('<:VK:886578224275025961>')

        if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.content.split(' ')}\
        .intersection(set(json.load(open('bot/textFile/yt.json')))) != set():
            await asyncio.sleep(5)
            await message.add_reaction('<:YouTube:886325532302655578>')

        if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.content.split(' ')}\
        .intersection(set(json.load(open('bot/textFile/twitch.json')))) != set():
            await asyncio.sleep(5)
            await message.add_reaction('<:Twitch:886578298543550544>')

            await self.bot.process_commands(message)

        try:
            amount = len(message.content) // 10
            if message.content[0] != settings['prefix']:
                if not message.author.bot:
                    godRole = message.guild.get_role(547399773322346508)
                    gamerRole = message.guild.get_role(888113637561090080)
                    ourRole = message.guild.get_role(547398893579665421)
                    if amount >=30:
                        cursor.execute(f"UPDATE users SET cash = cash + 30 WHERE id = {message.author.id}")
                    elif godRole in message.author.roles: #–î–ª—è –±–æ–≥–æ–≤
                        amount = round(amount*1.5)
                        cursor.execute(f"UPDATE users SET cash = cash + {amount} WHERE id = {message.author.id}")
                    elif gamerRole in message.author.roles: #–î–ª—è –≥–µ–π–º–µ—Ä–æ–≤
                        amount = round(amount*1.3)
                        cursor.execute(f"UPDATE users SET cash = cash + {amount} WHERE id = {message.author.id}")
                    elif ourRole in message.author.roles: #–î–ª—è –Ω–∞—à–∏—Ö –ª—é–¥–µ–π
                        amount = round(amount*1.2)
                        cursor.execute(f"UPDATE users SET cash = cash + {amount} WHERE id = {message.author.id}")
                    connection.commit() 
        except:pass

#–ö–æ–º–∞–Ω–¥–∞_balance
    @commands.command(aliases = ['balance','cash','–±–∞–ª–∞–Ω—Å'])
    async def __balance(self,ctx,member:discord.Member = None):
        if member is None:
            cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id))
            results = cursor.fetchone()[0]
            await ctx.send(embed = discord.Embed(
                description = f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{ctx.author.mention}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: **{results}** :leaves:"""
            ))
            await ctx.message.delete()
        else:
            cursor.execute("SELECT cash FROM users WHERE id = {}".format(member.id))
            results = cursor.fetchone()[0]
            await ctx.send(embed = discord.Embed(
                description = f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member.mention}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: **{results}** :leaves:"""
            ))
            await ctx.message.delete()

#–ö–æ–º–∞–Ω–¥–∞_give
    @commands.command(pass_context=True, aliases=['give', '–≤—ã–¥–∞—Ç—å'])
    @commands.has_permissions(administrator=True)
    async def __give(self, ctx, member: discord.Member=None, amount:int=None):
        if member is None:
            await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –∑–∞—á–∏—Å–ª–∏—Ç—å :leaves:.")
            await ctx.message.delete()
        else:
            if amount is None:
                await ctx.send(f"{ctx.author.mention}, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª, —Å–∫–æ–ª—å–∫–æ :leaves: –≤—ã–¥–∞—Ç—å.")
                await ctx.message.delete()
            elif amount < 0:
                await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0.")
                await ctx.message.delete()
            else:
                cursor.execute(f"UPDATE users SET cash = cash + {amount} WHERE id = {member.id}")
                connection.commit()
                await ctx.message.add_reaction('‚úÖ')
    @__give.error
    async def __give_error(self, ctx, error):
        emb = discord.Embed(color=0xa62019)
        emb.add_field(name='‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã ``.give``!',value=f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
        Mes = await ctx.send(embed = emb)
        await ctx.message.delete()
        await asyncio.sleep(10)
        await Mes.delete()  
    
#–ö–æ–º–∞–Ω–¥–∞_add-shop
    @commands.command(pass_context=True, aliases=['add-shop','–¥–æ–±–∞–≤–∏—Ç—å-—Ä–æ–ª—å'])
    @commands.has_permissions(administrator=True)
    async def __add_shop(self, ctx, role: discord.Role=None, cost: int = None):
        if role is None:
            await ctx.send(f"{ctx.authot.mention}, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –º–∞–≥–∞–∑–∏–Ω.")
            await ctx.message.delete()
        else:
            if cost is None:
                await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–æ–ª–∏.")
                await ctx.message.delete()
            elif cost < 0:
                await ctx.send(f"{ctx.author.mention}, –≤—ã –∑–∞–¥–∞–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏. –î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π.")
                await ctx.message.delete()
            else:
                cursor.execute(f"INSERT INTO shop VALUES ({role.id},{ctx.guild.id},{cost})")
                connection.commit()
                await ctx.message.delete()
                await ctx.send(embed=discord.Embed(description = "–†–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω!"))
    @__add_shop.error
    async def __add_shop_error(self, ctx, error):
        emb = discord.Embed(color=0xa62019)
        emb.add_field(name='‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã ``.add_shop``!',value=f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
        Mes = await ctx.send(embed = emb)
        await ctx.message.delete()
        await asyncio.sleep(10)
        await Mes.delete()

#–ö–æ–º–∞–Ω–¥–∞_remove-shop
    @commands.command(pass_context=True, aliases=['remove-shop','—É–¥–∞–ª–∏—Ç—å-—Ä–æ–ª—å'])
    @commands.has_permissions(administrator=True)
    async def __remove_shop(self, ctx, role: discord.Role=None):
        if role is None:
            await ctx.send(f"{ctx.authot.mention}, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.")
            await ctx.message.delete()
        else:
            cursor.execute("DELETE FROM shop WHERE role_id = {}".format(role.id))
            connection.commit()
            await ctx.message.delete()
            await ctx.send(embed=discord.Embed(description = "–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞!"))
    @__remove_shop.error
    async def __remove_shop_error(self, ctx, error):
        emb = discord.Embed(color=0xa62019)
        emb.add_field(name='‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã ``.remove_shop``!',value=f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
        Mes = await ctx.send(embed = emb)
        await ctx.message.delete()
        await asyncio.sleep(10)
        await Mes.delete()

#–ö–æ–º–∞–Ω–¥–∞_shop
    @commands.command(pass_context=True, aliases=['shop','–º–∞–≥–∞–∑–∏–Ω'])
    async def __shop(self, ctx):
        embed = discord.Embed(title="–ú–∞–≥–∞–∑–∏–Ω",color=0x00d166)
        cursor.execute("SELECT item_num, role_id, cost, item_type, description FROM shop WHERE server_id = {0}".format(ctx.guild.id))
        buttons = []
        for row in cursor.fetchall():
            if row[3] == "role":
                embed.add_field(
                    name = f"–¢–æ–≤–∞—Ä: ``{ctx.guild.get_role(row[1])}``",
                    value = f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {row[2]} :leaves:"
                )
                buttons.append(Button(style=ButtonStyle.green,custom_id = f"{row[0]}",label=f'{ctx.guild.get_role(row[1])}')),
            else:
                embed.add_field(
                    name = f"–¢–æ–≤–∞—Ä: ``{row[4]}``",
                    value = f"–°—Ç–æ–∏–º–æ—Å—Ç—å: {row[2]} :leaves:"
                )
                buttons.append(Button(style=ButtonStyle.green,custom_id = f"{row[0]}",label=f'{row[4]}'))
        mes = await ctx.send(embed = embed,components=buttons)
        await ctx.message.delete()

        while True:
            responce = await self.bot.wait_for('button_click')
            responce = await ctx.wait_for_button_click(check=check)
            num = responce.component.custom_id
            cursor.execute("SELECT item_type FROM shop WHERE item_num = {0}".format(num))
            itemType = cursor.fetchone()[0]
            cursor.execute("SELECT cost FROM shop WHERE item_num = {0}".format(num))
            cost = cursor.fetchone()[0]
            cursor.execute("SELECT role_id FROM shop WHERE item_num = {0}".format(num))
            role = ctx.guild.get_role(cursor.fetchone()[0])
            author = responce.author
            cursor.execute(f"SELECT premium FROM users WHERE id = {author.id}")
            isPremium = cursor.fetchone()[0]
            cursor.execute(f"SELECT cash FROM users WHERE id = {author.id}")
            cash = cursor.fetchone()[0]

            if cost <= cash:
                if itemType == "sub":
                    if isPremium == True:
                        await responce.reply(f"{author.mention}, —É –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞")
                    if isPremium == False:
                        cursor.execute(f"UPDATE users SET premium = true WHERE id = {author.id}")
                        cursor.execute("UPDATE users SET cash = cash - {0} WHERE id = {1}".format(cost, author.id))
                        await responce.reply(embed=discord.Embed(description = "‚úÖ –ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!", color = 0x00d166))
                elif itemType == "role":
                    if role in author.roles:
                        await responce.reply(f"{author.mention}, —É –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è –¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å")
                    else:
                        await author.add_roles(role)
                        cursor.execute("UPDATE users SET cash = cash - {0} WHERE id = {1}".format(cost, author.id))
                        if isPremium == True:
                            cursor.execute("UPDATE users SET spent = spent + {0} WHERE id = {1}".format(cost, author.id))
                        await responce.reply(embed=discord.Embed(description = "‚úÖ –ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!", color = 0x00d166))
                await mes.delete()
            else:
                await responce.reply(f"{author.mention}, —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞")
                await mes.delete()
                
#–ö–æ–º–∞–Ω–¥–∞_leaderboard
    @commands.command(aliases = ['leaderboard', '–ª–∏–¥–µ—Ä–±–æ—Ä–¥'])
    async def __leaderboard(self,ctx):
        embed = discord.Embed(title = '–¢–æ–ø 10 —Å–µ—Ä–≤–µ—Ä–∞', color = 0x00d166)
        counter = 0
        cursor.execute("SELECT name, cash FROM users WHERE server_id = {} ORDER BY cash DESC LIMIT 10".format(ctx.guild.id))
        resilt = cursor.fetchall()
        for row in resilt:
            counter += 1
            embed.add_field(
                name = f'# {counter} | ``{row[0]}``',
                value = f'–ë–∞–ª–∞–Ω—Å: {row[1]} :leaves:',
                inline = False
            )
    
        await ctx.send(embed = embed)

#–ö–æ–º–∞–Ω–¥–∞_convey
    @commands.command(aliases = ['convey','–ø–µ—Ä–µ–¥–∞—Ç—å'])
    async def __convey(self, ctx, member: discord.Member=None, amount:int=None):
        if member is None:
            Mes = await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å :leaves:.")
            await ctx.message.delete()
            await asyncio.sleep(10)
            await Mes.delete()
        elif member is ctx.author:
            Mes = await ctx.send(embed=discord.Embed(description = "‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ!", color = 0xa62019))
            await ctx.message.delete()
            await asyncio.sleep(10)
            await Mes.delete()
        else:
            cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id))
            resilts_one = cursor.fetchone()[0]
            if amount is None:
                Mes = await ctx.send(f"{ctx.author.mention}, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª, —Å–∫–æ–ª—å–∫–æ :leaves: –ø–µ—Ä–µ–¥–∞—Ç—å.")
                await ctx.message.delete()
                await asyncio.sleep(10)
                await Mes.delete()
            elif amount <= 0:
                Mes = await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0.")
                await ctx.message.delete()
                await asyncio.sleep(10)
                await Mes.delete()
            elif resilts_one >= amount:
                cursor.execute(f"UPDATE users SET cash = cash + {amount} WHERE id = {member.id}")
                cursor.execute(f"UPDATE users SET cash = cash - {amount} WHERE id = {ctx.author.id}")
                connection.commit()
                await ctx.send(embed=discord.Embed(description = "‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ!", color = 0x00d166))
                await ctx.message.delete()
            elif amount >= resilts_one:
                Mes = await ctx.send(embed=discord.Embed(description = "‚ùå –£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!", color = 0xa62019))
                await ctx.message.delete()
                await asyncio.sleep(10)
                await Mes.delete()
        

def checkTime():
    threading.Timer(1, checkTime).start()

    now = datetime.now()

    current_time = now.strftime("%H:%M:%S")
    currentDay = datetime.now().day

    if(current_time == '00:00:00'):
        print('–ë–∞–ª–ª—ã –±–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã')
        cursor.execute(f"UPDATE users SET cash = cash + 10")
    if currentDay == 1 and current_time == '00:00:00':
        print("Jeckpot –±—ã–ª —É–≤–µ–ª–∏—á–µ–Ω!")
        cursor.execute("UPDATE cashcasino SET cash = cash + cash")
        print("–ö–µ—à–±–µ–∫ –±—ã–ª –≤–æ–∑–≤—Ä–∞—â–µ–Ω")
        cursor.execute(f'UPDATE users SET cash = cash + spent * 0.04')
        cursor.execute(f'UPDATE users SET spent = 0')
    connection.commit()
        
checkTime()

def setup(bot):
    bot.add_cog(StastUsers(bot))