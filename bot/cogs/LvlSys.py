import asyncio
import discord
from discord import embeds
from discord import channel
from discord.ext import commands,tasks
from discord.ext.commands.core import command
import psycopg2
from datetime import datetime
import threading
import random
import json
import string

class StastUsers(commands.Cog):

    def __init__(self, bot):
        self.bot = bot

    global connection
    global cursor
    connection = psycopg2.connect(
        dbname='d7npuuht675g6t',
        user='dfelpwutbrsdwj',
        password='84d0cfdcf95f22787066edbc6cac37e900a64943ad8629d9ad30e325c6e797cc',
        host='ec2-44-198-223-154.compute-1.amazonaws.com')
    cursor = connection.cursor()

    @commands.Cog.listener()
    async def on_ready(self):
        cursor.execute("""CREATE TABLE IF NOT EXISTS users(
            name TEXT,
            id BIGINT,
            cash BIGINT,
            server_id BIGINT
        )""")

        cursor.execute("""CREATE TABLE IF NOT EXISTS shop(
            role_id INT,
            id INT,
            cost BIGINT            
        )""")

        cursor.execute("""CREATE TABLE IF NOT EXISTS CashCasino(
            cash BIGINT,
            server_id BIGINT
        )""")
        
        for guild in self.bot.guilds:
            for member in guild.members:
                cursor.execute(f"SELECT id FROM users WHERE id = {member.id}")
                results = cursor.fetchone()
                if not member.bot:
                    if results is None:
                        cursor.execute(f"INSERT INTO users VALUES ('{member}','{member.id}',0,'{guild.id}')")
                    else:
                        pass
            cursor.execute(f"SELECT cash FROM CashCasino WHERE server_id = {guild.id}")
            serverCash = cursor.fetchone()
            if serverCash is None:
                cursor.execute(f"INSERT INTO CashCasino VALUES (0,'{guild.id}')")
            else:
                pass
        connection.commit()
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã–π –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")

    @commands.Cog.listener()
    async def on_member_join(self, member):
        cursor.execute(f"SELECT id FROM users WHERE id = {member.id}")
        results = cursor.fetchone()
        if not member.bot:
            if results is None:
                cursor.execute(f"INSERT INTO users VALUES ('{member}','{member.id}',0,'{member.guild.id}')")
                connection.commit()
            else:
                pass

    @commands.Cog.listener()
    async def on_message(self,message):
        OffMat = ["–ò–ª–∏ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, –∏–ª–∏ —Ç—ã –º–∞—Ç–µ–∫–Ω—É–ª—Å—è {}?\n–ù–∞–¥–µ—é—Å—å –ø–æ–∫–∞–∑–∞–ª–æ—Å—å, –∞ —Ç–æ –∑–∞–±–∞–Ω—é!","–Ø –∫–æ–Ω–µ—á–Ω–æ –Ω–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∫–∞, –Ω–æ –º–Ω–µ –ø–æ–∫–∞–∑–∞–ª–æ—Å—å —á—Ç–æ —Ç—ã –º–∞—Ç–µ—Ä–∏—à—Å—è {}","–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–∞–∫–∏—Ö —Å–ª–æ–≤, —Ö–æ—Ä–æ—à–æ {}?"]

        if '–≥–∞–±–µ –∂–∏–≤' in message.content.lower():
            await message.channel.send("–ì–∞–±–µ –†–∏–ø!!!")

        if '–º–∏–∫—É —Ä–∏–ø' in message.content.lower():
            await message.channel.send("–°–∞–º –†–∏–ø, —Ç–∞–∫ –∂–µ –∫–∞–∫ –∏ –ì–∞–±–µ!!!")

        if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.content.split(' ')}.intersection(set(json.load(open('bot/textFile/cenz.json')))) != set():
            Mes = await message.channel.send(random.choice(OffMat).format(message.author.mention))
            await asyncio.sleep(30)
            await Mes.delete()

        if '@everyone' in message.content.lower():
            await message.add_reaction('üëç')
            await message.add_reaction('üëé')

        if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.content.split(' ')}\
        .intersection(set(json.load(open('bot/textFile/vk.json')))) != set():
            await asyncio.sleep(5)
            await message.add_reaction('<:VK:886578224275025961>')

        if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.content.split(' ')}\
        .intersection(set(json.load(open('bot/textFile/yt.json')))) != set():
            await asyncio.sleep(5)
            await message.add_reaction('<:YouTube:886325532302655578>')

        if {i.lower().translate(str.maketrans('','',string.punctuation)) for i in message.content.split(' ')}\
        .intersection(set(json.load(open('bot/textFile/twitch.json')))) != set():
            await asyncio.sleep(5)
            await message.add_reaction('<:Twitch:886578298543550544>')

            await self.bot.process_commands(message)

        amount = len(message.content) // 10
        if message.content[0] != ".":
            if not message.author.bot:
                if amount >= 30:
                    cursor.execute(f"UPDATE users SET cash = cash + 30 WHERE id = {message.author.id}")
                else:
                    cursor.execute(f"UPDATE users SET cash = cash + {amount} WHERE id = {message.author.id}")
                connection.commit()

#–ö–æ–º–∞–Ω–¥–∞_balance
    @commands.command(aliases = ['balance','cash','–±–∞–ª–∞–Ω—Å'])
    async def __balance(self,ctx,member:discord.Member = None):
        if member is None:
            cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id))
            results = cursor.fetchone()[0]
            await ctx.send(embed = discord.Embed(
                description = f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{ctx.author.mention}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: **{results}** :leaves:"""
            ))
            await ctx.message.delete()
        else:
            cursor.execute("SELECT cash FROM users WHERE id = {}".format(member.id))
            results = cursor.fetchone()[0]
            await ctx.send(embed = discord.Embed(
                description = f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member.mention}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: **{results}** :leaves:"""
            ))
            await ctx.message.delete()

#–ö–æ–º–∞–Ω–¥–∞_give
    @commands.command(pass_context=True, aliases=['give', '–≤—ã–¥–∞—Ç—å'])
    @commands.has_permissions(administrator=True)
    async def __give(self, ctx, member: discord.Member=None, amount:int=None):
        if member is None:
            await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –∑–∞—á–∏—Å–ª–∏—Ç—å :leaves:.")
            await ctx.message.delete()
        else:
            if amount is None:
                await ctx.send(f"{ctx.author.mention}, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª, —Å–∫–æ–ª—å–∫–æ :leaves: –≤—ã–¥–∞—Ç—å.")
                await ctx.message.delete()
            elif amount < 0:
                await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0.")
                await ctx.message.delete()
            else:
                cursor.execute(f"UPDATE users SET cash = cash + {amount} WHERE id = {member.id}")
                connection.commit()
                await ctx.message.add_reaction('‚úÖ')
    @__give.error
    async def __give_error(self, ctx, error):
        emb = discord.Embed(color=0xa62019)
        emb.add_field(name='‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã ``.give``!',value=f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
        Mes = await ctx.send(embed = emb)
        await ctx.message.delete()
        await asyncio.sleep(10)
        await Mes.delete()  
    
#–ö–æ–º–∞–Ω–¥–∞_add-shop
    @commands.command(pass_context=True, aliases=['add-shop','–¥–æ–±–∞–≤–∏—Ç—å-—Ä–æ–ª—å'])
    @commands.has_permissions(administrator=True)
    async def __add_shop(self, ctx, role: discord.Role=None, cost: int = None):
        if role is None:
            await ctx.send(f"{ctx.authot.mention}, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –º–∞–≥–∞–∑–∏–Ω.")
            await ctx.message.delete()
        else:
            if cost is None:
                await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–æ–ª–∏.")
                await ctx.message.delete()
            elif cost < 0:
                await ctx.send(f"{ctx.author.mention}, –≤—ã –∑–∞–¥–∞–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏. –î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π.")
                await ctx.message.delete()
            else:
                cursor.execute(f"INSERT INTO shop VALUES ({role.id},{ctx.guild.id},{cost})")
                connection.commit()
                await ctx.message.delete()
                await ctx.send(embed=discord.Embed(description = "–†–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω!"))
    @__add_shop.error
    async def __add_shop_error(self, ctx, error):
        emb = discord.Embed(color=0xa62019)
        emb.add_field(name='‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã ``.add_shop``!',value=f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
        Mes = await ctx.send(embed = emb)
        await ctx.message.delete()
        await asyncio.sleep(10)
        await Mes.delete()

#–ö–æ–º–∞–Ω–¥–∞_remove-shop
    @commands.command(pass_context=True, aliases=['remove-shop','—É–¥–∞–ª–∏—Ç—å-—Ä–æ–ª—å'])
    @commands.has_permissions(administrator=True)
    async def __remove_shop(self, ctx, role: discord.Role=None):
        if role is None:
            await ctx.send(f"{ctx.authot.mention}, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.")
            await ctx.message.delete()
        else:
            cursor.execute("DELETE FROM shop WHERE role_id = {}".format(role.id))
            connection.commit()
            await ctx.message.delete()
            await ctx.send(embed=discord.Embed(description = "–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞!"))
    @__remove_shop.error
    async def __remove_shop_error(self, ctx, error):
        emb = discord.Embed(color=0xa62019)
        emb.add_field(name='‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã ``.remove_shop``!',value=f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')
        Mes = await ctx.send(embed = emb)
        await ctx.message.delete()
        await asyncio.sleep(10)
        await Mes.delete()

#–ö–æ–º–∞–Ω–¥–∞_shop
    @commands.command(pass_context=True, aliases=['shop','–º–∞–≥–∞–∑–∏–Ω'])
    async def __shop(self, ctx):
        embed = discord.Embed(title="–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π",color=0x00d166)
        cursor.execute("SELECT role_id, cost FROM shop WHERE id = %s", [ctx.guild.id])
        for row in cursor.fetchall():
            if ctx.guild.get_role(row[0]) != None:
                embed.add_field(
                    name = f"–†–æ–ª—å  ``{ctx.guild.get_role(row[0])}``",
                    value = f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–æ–ª–∏: {row[1]} :leaves:",
                    inline = False
                )
        embed.set_footer(text="–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Ä–æ–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É .buy @role, –≥–¥–µ @role —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏")
        await ctx.send(embed = embed)
        await ctx.message.delete()
    
#–ö–æ–º–∞–Ω–¥–∞_buy
    @commands.command(pass_context=True, aliases=['buy','–∫—É–ø–∏—Ç—å'])
    async def __buy(self, ctx, role: discord.Role = None):
        # rolelist = [547109093907628046,547398893579665421,547399773322346508]
        if role is None:
            await ctx.send(f"{ctx.authot.mention}, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –¥–ª—è –ø–æ–∫—É–ø–∫–∏.")
            await ctx.message.delete()
        else:
            cursor.execute("SELECT cost FROM shop WHERE role_id = {}".format(role.id))
            resilts_one = cursor.fetchone()[0]
            cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id))
            resilts_two = cursor.fetchone()[0]
            if role in ctx.author.roles:
                await ctx.send(f"{ctx.author.mention}, —É –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è –¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å")
            elif resilts_one > resilts_two:
                await ctx.send(f"{ctx.author.mention}, —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏")
                await ctx.message.delete()
            else:
                # if any(role.id in rolelist for role in ctx.message.author.roles):
             #     await ctx.author.remove_roles(rolelist)
                # await ctx.author.edit(roles = [])
                await ctx.author.add_roles(role)
                await ctx.message.delete()
                cursor.execute("UPDATE users SET cash = cash - {0} WHERE id = {1}".format(resilts_one, ctx.author.id))
                await ctx.send(embed=discord.Embed(description = "‚úÖ –ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!", color = 0x00d166))

#–ö–æ–º–∞–Ω–¥–∞_leaderboard
    @commands.command(aliases = ['leaderboard', '–ª–∏–¥–µ—Ä–±–æ—Ä–¥'])
    async def __leaderboard(self,ctx):
        embed = discord.Embed(title = '–¢–æ–ø 10 —Å–µ—Ä–≤–µ—Ä–∞', color = 0x00d166)
        counter = 0
        cursor.execute("SELECT name, cash FROM users WHERE server_id = {} ORDER BY cash DESC LIMIT 10".format(ctx.guild.id))
        resilt = cursor.fetchall()
        for row in resilt:
            counter += 1
            embed.add_field(
                name = f'# {counter} | ``{row[0]}``',
                value = f'–ë–∞–ª–∞–Ω—Å: {row[1]} :leaves:',
                inline = False
            )
    
        await ctx.send(embed = embed)

#–ö–æ–º–∞–Ω–¥–∞_convey
    @commands.command(aliases = ['convey','–ø–µ—Ä–µ–¥–∞—Ç—å'])
    async def __convey(self, ctx, member: discord.Member=None, amount:int=None):
        if member is None:
            Mes = await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å :leaves:.")
            await ctx.message.delete()
            await asyncio.sleep(10)
            await Mes.delete()
        elif member is ctx.author:
            Mes = await ctx.send(embed=discord.Embed(description = "‚ùå –¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ —Å–∞–º–æ–º—É —Å–µ–±–µ!", color = 0xa62019))
            await ctx.message.delete()
            await asyncio.sleep(10)
            await Mes.delete()
        else:
            cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id))
            resilts_one = cursor.fetchone()[0]
            if amount is None:
                Mes = await ctx.send(f"{ctx.author.mention}, —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª, —Å–∫–æ–ª—å–∫–æ :leaves: –ø–µ—Ä–µ–¥–∞—Ç—å.")
                await ctx.message.delete()
                await asyncio.sleep(10)
                await Mes.delete()
            elif amount <= 0:
                Mes = await ctx.send(f"{ctx.author.mention}, —É–∫–∞–∂–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0.")
                await ctx.message.delete()
                await asyncio.sleep(10)
                await Mes.delete()
            elif resilts_one >= amount:
                cursor.execute(f"UPDATE users SET cash = cash + {amount} WHERE id = {member.id}")
                cursor.execute(f"UPDATE users SET cash = cash - {amount} WHERE id = {ctx.author.id}")
                connection.commit()
                await ctx.send(embed=discord.Embed(description = "‚úÖ –ü–µ—Ä–µ–≤–æ–¥ –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ!", color = 0x00d166))
                await ctx.message.delete()
            elif amount >= resilts_one:
                Mes = await ctx.send(embed=discord.Embed(description = "‚ùå –£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!", color = 0xa62019))
                await ctx.message.delete()
                await asyncio.sleep(10)
                await Mes.delete()
        

def checkTime():
    threading.Timer(1, checkTime).start()

    now = datetime.now()

    current_time = now.strftime("%H:%M:%S")
    currentDay = datetime.now().day

    if(current_time == '04:00:00'):
        print('–ë–∞–ª–ª—ã –±–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã')
        cursor.execute(f"UPDATE users SET cash = cash + 10")
    if currentDay == 1 and current_time == '04:00:00':
        print("Jeckpot –±—ã–ª —É–≤–µ–ª–∏—á–µ–Ω!")
        cursor.execute("UPDATE cashcasino SET cash = cash + cash")
    connection.commit()
        
checkTime()

def setup(bot):
    bot.add_cog(StastUsers(bot))